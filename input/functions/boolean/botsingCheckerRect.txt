// Kijkt of een rechthoek ergens mee botst
boolean botsingCheckerRect(color kleur, float x, float y, float breedte, float hoogte, String kant){
  // hoeveelheid meetpunten bepalen (iedere 5 pixels één) 
  float meetpunten;
  if(kant == "Boven" || kant == "Onder"){
     meetpunten = breedte/5; 
  }
  else if(kant == "Rechts" || kant == "Links"){
    meetpunten = hoogte/5; 
  }
  else{
    meetpunten = (breedte >= hoogte ? breedte : hoogte)/5;
    print(meetpunten);
  }
  
  //punten checken voor iedere zijde van de rechthoek
  float optellerX = breedte/meetpunten;
  float optellerY = hoogte/meetpunten;    
  for(int i = (int)0; i < meetpunten+1; i += 1){
    float xVar = x + (i*optellerX);
    float yVar = y + (i*optellerY);

    if((kant == "Boven" || kant == "alles") && get((int)(xVar), (int)y-1) == kleur){
      return true;
    }
    if((kant == "Onder" || kant == "alles") && get((int)(xVar),(int)(y + hoogte + 1)) == kleur){
      return true; 
    }
    if((kant == "Rechts" || kant == "alles") && get((int)x-1, (int)(yVar)) == kleur){
      return true;
    }
    if((kant == "Links" || kant == "alles") && get((int)(x + breedte + 1), (int)(yVar)) == kleur){
      return true; 
    }
    /*
    //Visualisatie van meetpunten (werkt alleen als er geen botsing plaatsvindt)
    fill(0,255,0);
    ellipse(xVar,y-1, 5,5);
    ellipse(xVar,y+hoogte+1, 5,5);
    ellipse(x-1, yVar, 5,5);
    ellipse(x + breedte + 1,yVar, 5,5); 
    */    
  }   
  return false;
}